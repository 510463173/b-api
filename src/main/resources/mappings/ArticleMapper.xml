<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqj.blog.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.zqj.blog.entity.Article" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="USER" property="user" jdbcType="INTEGER" />
    <result column="CATEGORY" property="category" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="CREATED_WHEN" property="createdWhen" jdbcType="TIMESTAMP" />
    <result column="PUBLISH_TIME" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="LAST_MODIFY" property="lastModify" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zqj.blog.entity.Article" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, TITLE, USER, CATEGORY, STATUS, CREATED_WHEN, PUBLISH_TIME, LAST_MODIFY
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zqj.blog.entity.Article" >
    insert into article (ID, TITLE, USER, 
      CATEGORY, STATUS, CREATED_WHEN, 
      PUBLISH_TIME, LAST_MODIFY, CONTENT
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{user,jdbcType=INTEGER}, 
      #{category,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{createdWhen,jdbcType=TIMESTAMP}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{lastModify,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zqj.blog.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="user != null" >
        USER,
      </if>
      <if test="category != null" >
        CATEGORY,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createdWhen != null" >
        CREATED_WHEN,
      </if>
      <if test="publishTime != null" >
        PUBLISH_TIME,
      </if>
      <if test="lastModify != null" >
        LAST_MODIFY,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdWhen != null" >
        #{createdWhen,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModify != null" >
        #{lastModify,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqj.blog.entity.Article" >
    update article
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        USER = #{user,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        CATEGORY = #{category,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdWhen != null" >
        CREATED_WHEN = #{createdWhen,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        PUBLISH_TIME = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModify != null" >
        LAST_MODIFY = #{lastModify,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zqj.blog.entity.Article" >
    update article
    set TITLE = #{title,jdbcType=VARCHAR},
      USER = #{user,jdbcType=INTEGER},
      CATEGORY = #{category,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATED_WHEN = #{createdWhen,jdbcType=TIMESTAMP},
      PUBLISH_TIME = #{publishTime,jdbcType=TIMESTAMP},
      LAST_MODIFY = #{lastModify,jdbcType=TIMESTAMP},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqj.blog.entity.Article" >
    update article
    set TITLE = #{title,jdbcType=VARCHAR},
      USER = #{user,jdbcType=INTEGER},
      CATEGORY = #{category,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATED_WHEN = #{createdWhen,jdbcType=TIMESTAMP},
      PUBLISH_TIME = #{publishTime,jdbcType=TIMESTAMP},
      LAST_MODIFY = #{lastModify,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCategoryId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article where category = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllArticles" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from article
  </select>
</mapper>