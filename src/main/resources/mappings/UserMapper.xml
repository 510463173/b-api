<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqj.blog.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zqj.blog.entity.User" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="ENCRYPTED_PASSWORD" property="encryptedPassword" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="GENDER" property="gender" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="PORTRAIT" property="portrait" jdbcType="VARCHAR" />
    <result column="REGISTERED_WHEN" property="registeredWhen" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN" property="lastLogin" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_NAME, ENCRYPTED_PASSWORD, PHONE, GENDER, EMAIL, ADDRESS, PORTRAIT, REGISTERED_WHEN, 
    LAST_LOGIN, STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where USER_NAME = #{userName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zqj.blog.entity.User" >
    insert into user (ID, USER_NAME, ENCRYPTED_PASSWORD, 
      PHONE, GENDER, EMAIL, 
      ADDRESS, PORTRAIT, REGISTERED_WHEN, 
      LAST_LOGIN, STATUS)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{encryptedPassword,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, #{registeredWhen,jdbcType=TIMESTAMP}, 
      #{lastLogin,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zqj.blog.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="encryptedPassword != null" >
        ENCRYPTED_PASSWORD,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="gender != null" >
        GENDER,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="portrait != null" >
        PORTRAIT,
      </if>
      <if test="registeredWhen != null" >
        REGISTERED_WHEN,
      </if>
      <if test="lastLogin != null" >
        LAST_LOGIN,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="encryptedPassword != null" >
        #{encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="registeredWhen != null" >
        #{registeredWhen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqj.blog.entity.User" >
    update user
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="encryptedPassword != null" >
        ENCRYPTED_PASSWORD = #{encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        GENDER = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        PORTRAIT = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="registeredWhen != null" >
        REGISTERED_WHEN = #{registeredWhen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null" >
        LAST_LOGIN = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqj.blog.entity.User" >
    update user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      ENCRYPTED_PASSWORD = #{encryptedPassword,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      PORTRAIT = #{portrait,jdbcType=VARCHAR},
      REGISTERED_WHEN = #{registeredWhen,jdbcType=TIMESTAMP},
      LAST_LOGIN = #{lastLogin,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>